version: '3.9'

services:
  postgres:
    image: postgres:16
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker/initdb:/docker-entrypoint-initdb.d

  # redis:
  #   image: redis:7
  #   ports:
  #     - "6379:6379"

  # rabbitmq:
  #   image: rabbitmq:3-management
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"

  auth-service:
    build: ./auth-service
    depends_on:
      - postgres
    env_file:
      - ./auth-service/.env
    environment:
      - DB_DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/auth?sslmode=disable
      - PORT=8000
      - JWT_SECRET=${JWT_SECRET}

  product-service:
    build: ./product-service
    depends_on:
      - postgres
    environment:
      - DB_DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/products?sslmode=disable
      - PORT=8000

  order-service:
    build: ./order-service
    depends_on:
      - postgres
    environment:
      - DB_DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/orders?sslmode=disable
      - PORT=8000

  api-gateway:
    build: ./api-gateway
    depends_on:
      - auth-service
      - product-service
      - order-service
    environment:
      - PORT=8000
      - AUTH_SERVICE_URL=http://auth-service:8000
      - PRODUCT_SERVICE_URL=http://product-service:8000
      - ORDER_SERVICE_URL=http://order-service:8000
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "${API_GATEWAY_PORT}:8000"

volumes:
  pgdata:
